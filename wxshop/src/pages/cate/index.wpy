<style>
    .cate_menu{

    }
</style>

<template>
    <div>
        <div style="width: 25%;float: left;overflow:hidden;">
            <div style="">
            <van-sidebar :active-key="activeKey" @change="onChange">
                <van-sidebar-item title="男装" />
                <van-sidebar-item title="女装" />
                <van-sidebar-item title="手机" />
            </van-sidebar>
            </div>
        </div>
        <div style="width: 72%;float: right;padding: 10rpx;box-sizing: content-box">
            <!--商品列表  -->
            <div class="goods-list-box body-container">
                <gm-goods v-for="(goods, index) in goodsList"
                          :key="index"
                          :goods="goods"
                          :showOrigin="false"
                          height="320"
                ></gm-goods>
            </div>
            
    
            <!--加载-->
            <gm-loading
                    ref="loadings"
                    url="get_goods_list"
            ></gm-loading>

        </div>
        <van-notify id="van-notify" />

        <van-toast id="custom-selector"></van-toast>

    </div>
</template>

<script>
    import wepy from '@wepy/core'
    import Notify from '@/vendor/vant/notify/notify';
    import Toast from "@/vendor/vant/toast/toast"

    var self;
    wepy.page({
        data:{
            activeKey: 0,
            goodsList:[],
        },
        methods:{
            onChange(event) {
                Notify({ type: 'primary', message: event.detail });
            },
            getGoodsList(){
                return self.$app.$get('get_goods_list', {page: self.page});

                // if (self.page == 1) {
                //     return self.$app.$get('get_goods_list', {page: self.page});
                // }
            },

            initDatas() {
                let goods_list = self.getGoodsList();
                Promise.all([goods_list]).then((result) => {
                    let goods_list_res = result[0];
                    if (goods_list_res.data.code > 0) {
                        self.goodsList = goods_list_res.data.data.goods_list;
                        self.totalPage = goods_list_res.data.data.goods_count;
                    }

                    console.log(self.goodsList);
                    setTimeout(res => Toast('加载完成'), 2000);

                }).catch((error) => {
                    console.log(error)
                })
            },
            loading(){
                Toast.loading({
                    mask: true,
                    message: '加载中...',
                    duration:0
                });
            }
        },

        onLoad(){
            self = this;
            self.loading();
            self.initDatas();
        },
        // 上拉
        onReachBottom: function () {
            self.$refs.loadings.getItemMore().then(response=>{
                if (response.data.code > 0){
                    self.goodsList = self.goodsList.concat(response.data.data.goods_list);
                }
            }).catch(error=>{

            })
        }
    })
</script>

<config>
{
    navigationBarTitleText: '商品分类',
    usingComponents:{
        "van-icon": "~@/vendor/vant/icon/index",
        "van-sidebar": "~@/vendor/vant/sidebar/index",
        "van-sidebar-item": "~@/vendor/vant/sidebar-item/index",
        "gm-goods" : "~@/components/goods/goods",
        "gm-loading" : "~@/components/loading",
        "van-loading": "~@/vendor/vant/loading/index",
        "van-toast": "~@/vendor/vant/toast/index",
    },
    "backgroundTextStyle" : "dark", <!--下拉 loading 的样式，仅支持 dark / light-->
    "enablePullDownRefresh": true,  <!--是否开启当前页面下拉刷新-->
    "onReachBottomDistance": 50,  <!--页面上拉触底事件触发时距页面底部距离，单位为px。-->
}    
</config>
